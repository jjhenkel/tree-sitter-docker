===================================
End-to-end Example 1
===================================

ARG IMAGE=registry.gitlab.com/brndnmtthws-oss/conky
FROM ${IMAGE}/builder/fedora-31-base:latest

RUN dnf -y -q install \
    llvm \
    clang \
    libcxx-devel \
    libcxxabi-devel \
    npm \
    && dnf clean all \
    && npm install -g lcov-summary \
    && npm cache clean --force

---

(dockerfile
  (arg (arg_name) (arg_default))
  (from 
    (repository (docker_variable))
    (image)
    (tag)
  )
  (run
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
  )
)

===================================
End-to-end Example 2
===================================

FROM openjdk:8-jdk-alpine

VOLUME ["/tmp", "/tmp/config", "/tmp/logs"]


ENV TIME_ZONE America/Sao_Paulo

RUN apk --no-cache add \
	tzdata \
    # Set timezone
    && echo "${TIME_ZONE}" > /etc/timezone \ 
	&& ln -sf /usr/share/zoneinfo/${TIME_ZONE} /etc/localtime 


ADD /target/*.jar app.jar

EXPOSE 9091

ENTRYPOINT ["java","-Dspring.profiles.active=docker","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar", "--spring.config.location=classpath:/application.yml,file:/tmp/config/application.yml"]

---

(dockerfile
  (from (image) (tag))
  (volume (json_array))
  (env (env_pair (env_key) (env_value)))
  (run 
    (line_continuation)
    (line_continuation)
    (comment)
    (line_continuation)
  )
  (add (path) (path))
  (expose (port))
  (entrypoint (json_array))
)

===================================
End-to-end Example 3
===================================

FROM biocontainers/biocontainers:debian-stretch-backports
MAINTAINER biocontainers <biodocker@gmail.com>
LABEL    software="openslide" \ 
    container="openslide" \ 
    about.summary="Python 2 wrapper for reading whole slide image files" \ 
    about.home="http://openslide.org" \ 
    software.version="1.1.1-2-deb-py2" \ 
    version="1" \ 
    about.copyright=" 2010-2014 Carnegie Mellon University" \ 
    about.license="LGPL-2.1" \ 
    about.license_file="/usr/share/doc/openslide/copyright" \ 
    about.tags=""

ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update && apt-get install -y python-openslide && apt-get clean && apt-get purge && rm -rf /var/lib/apt/lists/* /tmp/*
USER biodocker

---

(dockerfile
  (from (repository) (image) (tag))
  (maintainer)
  (label
    (label_pair (label_key) (label_value))
    (line_continuation)
    (label_pair (label_key) (label_value))
    (line_continuation)
    (label_pair (label_key) (label_value))
    (line_continuation)
    (label_pair (label_key) (label_value))
    (line_continuation)
    (label_pair (label_key) (label_value))
    (line_continuation)
    (label_pair (label_key) (label_value))
    (line_continuation)
    (label_pair (label_key) (label_value))
    (line_continuation)
    (label_pair (label_key) (label_value))
    (line_continuation)
    (label_pair (label_key) (label_value))
    (line_continuation)
    (label_pair (label_key) (label_value))
  )
  (env (env_pair (env_key) (env_value)))
  (run)
  (user (user_name))
)

===================================
End-to-end Example 4
===================================

FROM kalilinux/kali-linux-docker

RUN apt update && apt install -y postgresql \
								 apache2 \
								 python-pip \
								 python-dev \
								 build-essential \
								 git \
								 metasploit-framework

RUN git clone https://github.com/NullArray/AutoSploit.git && pip install shodan blessings
COPY database.yml /root/.msf4/database.yml
WORKDIR AutoSploit
EXPOSE 80 443 4444

ENTRYPOINT ["python", "autosploit.py"]
#ENTRYPOINT ["bash"]

---

(dockerfile
  (from (repository) (image))
  (run
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
  )
  (run)
  (copy (path) (path))
  (workdir (path))
  (expose (port) (port) (port))
  (entrypoint (json_array))
  (comment)
)

===================================
End-to-end Example 5
===================================

###
### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED
###

###
### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED
###

FROM circleci/php:7.1.27-cli-stretch

# Verify the circleci user exists before proceeding
RUN whoami

# node installations command expect to run as root
USER root
## Using node installation from https://raw.githubusercontent.com/nodejs/docker-node/170ed2092d4925971f9cd3ad5dfc416e820f90fd/10/stretch/Dockerfile

RUN groupadd --gid 1000 node \
  && useradd --uid 1000 --gid node --shell /bin/bash --create-home node

ENV NODE_VERSION 10.15.3

RUN ARCH= && dpkgArch="$(dpkg --print-architecture)" \
  && case "${dpkgArch##*-}" in \
    amd64) ARCH='x64';; \
    ppc64el) ARCH='ppc64le';; \
    s390x) ARCH='s390x';; \
    arm64) ARCH='arm64';; \
    armhf) ARCH='armv7l';; \
    i386) ARCH='x86';; \
    *) echo "unsupported architecture"; exit 1 ;; \
  esac \
  # gpg keys listed at https://github.com/nodejs/node#release-keys
  && set -ex \
  && for key in \
    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \
    FD3A5288F042B6850C66B31F09FE44734EB7990E \
    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \
    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \
    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
    B9AE9905FFD7803F25714661B63B535A4C206CA9 \
    77984A986EBC2AA786BC0F66B01FBB92821C587A \
    8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \
    4ED778F539E3634C779C87C6D7062848A1AB005C \
    A48C2BEE680E841632CD4E44F07496B3EB3C1762 \
    B9E2F5981AA6E0CD28160D9FF13993A75599653C \
  ; do \
    gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key" || \
    gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys "$key" || \
    gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key" ; \
  done \
  && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz" \
  && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \
  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \
  && grep " node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c - \
  && tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1 --no-same-owner \
  && rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt \
  && ln -s /usr/local/bin/node /usr/local/bin/nodejs

ENV YARN_VERSION 1.13.0

RUN set -ex \
  && for key in \
    6A010C5166006599AA17F08146C2130DFD2497F5 \
  ; do \
    gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key" || \
    gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys "$key" || \
    gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key" ; \
  done \
  && curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz" \
  && curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc" \
  && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \
  && mkdir -p /opt \
  && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \
  && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \
  && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \
  && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz


# Basic smoke test
RUN node --version

USER circleci

---

(dockerfile
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (from (repository) (image) (tag))
  (comment)
  (run)
  (comment)
  (user (user_name))
  (comment)
  (run (line_continuation))
  (env (env_pair (env_key) (env_value)))
  (run 
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (comment)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
  )
  (env (env_pair (env_key) (env_value)))
  (run
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
  )
  (comment)
  (run)
  (user (user_name))
)

===================================
End-to-end Example 6
===================================

FROM ubuntu
ENV name value
ENV name=value
ENV name=value name2=value2
ENV name="value value1"
ENV name=value\ value2
ENV name="value'quote space'value2"
ENV name='value"double quote"value2'
ENV name=value\ value2 name2=value2\ value3
ENV name="a\"b"
ENV name="a\'b"
ENV name='a\'b''
ENV name='a\"b'
ENV name="''"
# don't put anything after the next line - it must be the last line of the
# Dockerfile and it must end with \
ENV name=value \
    name1=value1 \
    name2="value2a \
           value2b" \
    name3="value3a\n\"value3b\"" \
	name4="value4a\\nvalue4b"

---

(dockerfile
  (from (image))
  (env (env_pair (env_key) (env_value)))
  (env (env_pair (env_key) (env_value)))
  (env (env_pair (env_key) (env_value)) (env_pair (env_key) (env_value)))
  (env (env_pair (env_key) (env_value)))
  (env (env_pair (env_key) (env_value)))
  (env (env_pair (env_key) (env_value)))
  (env (env_pair (env_key) (env_value)))
  (env (env_pair (env_key) (env_value)) (env_pair (env_key) (env_value)))
  (env (env_pair (env_key) (env_value)))
  (env (env_pair (env_key) (env_value)))
  (env (env_pair (env_key) (env_value)))
  (env (env_pair (env_key) (env_value)))
  (env (env_pair (env_key) (env_value)))
  (comment)
  (comment)
  (env
    (env_pair (env_key) (env_value))
    (line_continuation)
    (env_pair (env_key) (env_value))
    (line_continuation)
    (env_pair (env_key) (env_value))
    (line_continuation)
    (env_pair (env_key) (env_value))
    (line_continuation)
    (env_pair (env_key) (env_value))
  )
)
