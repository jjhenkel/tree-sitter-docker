===================================
RUN directive
===================================

RUN [ ! -z foobar ]

RUN [[ "$blah" =~ ^${blah}*=..* ]]

RUN find . -type f -name "*.blah" -exec {} \;

RUN do-something-here \
    # Icky comment after line continuation
    && do another-command --here

RUN do-something-here \
    # Why would you do this ? \
    # Icky comment after line continuation 
    && do another-command --here

RUN do-something-here \

    # Icky comment after line continuation with preceding blank line
    && do another-command --here

RUN several \
lines \
of \
continuation

RUN continuation with mistaken space after \ 
  we may want to still allow

RUN continuation blank line \
\
testing \
test

RUN sed -i '' && \
    sed -i '/blah\\/d' /some/file.txt

RUN echo hello\
  world\
  goodnight  \
  moon\
  light\
ning

RUN echo hello  \
  world

RUN echo hello  \
world

RUN echo hello \
goodbye\
frog

RUN echo hello  \  
world

RUN echo hi \
 \
 world \
\
 good\
\
night

RUN echo goodbye\
frog

RUN echo good\
bye\
frog

RUN echo hello \
# this is a comment

# this is a comment with a blank line surrounding it

this is some more useful stuff

---

(dockerfile
  (run)
  (run)
  (run)
  (run (line_continuation) (comment))
  (run (line_continuation) (comment) (comment))
  (run (line_continuation) (comment))
  (run
    (line_continuation)
    (line_continuation)
    (line_continuation)
  )
  (run (line_continuation))
  (run
    (line_continuation)
    (line_continuation)
    (line_continuation)
  )
  (run (line_continuation))
  (run
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
  )
  (run (line_continuation))
  (run (line_continuation))
  (run (line_continuation) (line_continuation))
  (run (line_continuation))
  (run
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
  )
  (run (line_continuation))
  (run (line_continuation) (line_continuation))
  (run (line_continuation) (comment) (comment))
) 

===================================
RUN don't slurp following directive
===================================

# blah
RUN whoami

# user root
USER root

---

(dockerfile 
  (comment)
  (run)
  (comment)
  (user (user_name))
)

===================================
RUN bug from corpus 1
===================================

# Bug from corpus related to mixing comments and line continuations
RUN \
  && cd tmp/ \
  ## Download source code
  && curl -O https://cran.r-project.org/src/base/R-3/R-${R_VERSION}.tar.gz \
  ## Extract source code
  && tar -xf R-${R_VERSION}.tar.gz \
  && cd R-${R_VERSION} \
  ## Set compiler flags
  && R_PAPERSIZE=letter

---

(dockerfile
  (comment)
  (run
    (line_continuation)
    (line_continuation)
    (comment)
    (line_continuation)
    (comment)
    (line_continuation)
    (line_continuation)
    (comment)
  )
)

===================================
RUN bug from corpus 2
===================================

# Silly double line continuations
# I don't know how, but they're still valid
RUN do the \\
  thing

---

(dockerfile (comment) (comment) (run (line_continuation)))

===================================
RUN bug from corpus 3
===================================

# This happened because a '_anything' started with \n
RUN \
	echo " \
		\n5 \
	> /r

---

(dockerfile 
  (comment)
  (run (line_continuation) (line_continuation) (line_continuation))
)

===================================
RUN bug from corpus 4
===================================

# Problem here is that 'env' is also a directive and we allow for any casing
# of directives (instead of forcing ENV)
RUN env \
    CC=arm-linux-gnueabi-gcc CFLAGS="-march=armv5te -marm -mfloat-abi=soft" \
    CXX=arm-linux-gnueabi-g++ CXXFLAGS="-march=armv5te -marm -mfloat-abi=soft" \
    bash musl.sh armv5te && \
    env \
    CC=arm-linux-gnueabi-gcc CFLAGS="-march=armv6 -marm" \
    CXX=arm-linux-gnueabi-g++ CXXFLAGS="-march=armv6 -marm" \
    bash musl.sh arm && \
    env \
    CC=arm-linux-gnueabihf-gcc CFLAGS="-march=armv6 -marm -mfpu=vfp" \
    CXX=arm-linux-gnueabihf-g++ CXXFLAGS="-march=armv6 -marm -mfpu=vfp" \
    bash musl.sh armhf

---

(dockerfile
  (comment)
  (comment)
  (run
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
  )
)

===================================
RUN bug from corpus 5
===================================

# Lots of \ here
RUN apt-get update \
    && apt-get install maven wget git zip unzip  -y \
            --allow-unauthenticated \
            --no-install-recommends \
    # install openjdk11
    && sed -i '/ARCHITECTURES = Collections.unmodifiableMap(m);/ i \ \ \ \ \ \ \ \ m.put("ppc64le", new Arch(0xC0000015, 0xFFFFFFFF, 2, 189, 11, 362, 358));' server/src/main/java/org/elasticsearch/bootstrap/SystemCallFilter.java

---

(dockerfile
  (comment)
  (run
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (line_continuation)
    (comment)
  )
)